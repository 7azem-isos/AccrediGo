// <auto-generated />
using System;
using AccrediGo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccrediGo.Infrastructure.Migrations
{
    [DbContext(typeof(AccrediGoDbContext))]
    partial class AccrediGoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccrediGo.Domain.Entities.BillingDetails.Feature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.BillingDetails.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubscriptionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityID");

                    b.HasIndex("SubscriptionID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.BillingDetails.Subscription", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PlanID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityID");

                    b.HasIndex("PlanID");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.BillingDetails.SubscriptionPlanFeature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubscriptionPlanID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureID");

                    b.HasIndex("SubscriptionPlanID");

                    b.ToTable("SubscriptionPlanFeatures");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Accreditation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ArabicName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accreditations");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.AnswerOption", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicOptionText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImprovementScenarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerOptions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Chapter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.ChapterAccreditationFacilityType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccreditationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChapterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacilityTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccreditationId");

                    b.HasIndex("ChapterId");

                    b.HasIndex("FacilityTypeId");

                    b.ToTable("ChapterAccreditationFacilityTypes");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.EoC", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicText")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("StandardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StandardId");

                    b.ToTable("EoCs");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Facility", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccreditationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicLocation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ArabicName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CompanySize")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FacilityTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccreditationId");

                    b.HasIndex("FacilityTypeId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.FacilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityTypes");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.ImprovementScenario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnswerOptionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicScenarioText")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ScenarioText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnswerOptionId")
                        .IsUnique();

                    b.ToTable("ImprovementScenarios");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Question", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicText")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DependsOnQuestionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EoCId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DependsOnQuestionId");

                    b.HasIndex("EoCId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Standard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ChapterAccreditationFacilityTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChapterAccreditationFacilityTypeId");

                    b.ToTable("Standards");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.FacilityRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityRoles");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.FacilityRolePermission", b =>
                {
                    b.Property<int>("FacilityRoleID")
                        .HasColumnType("int");

                    b.Property<string>("PermissionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacilityRoleID", "PermissionID");

                    b.HasIndex("PermissionID");

                    b.ToTable("FacilityRolePermissions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.Permission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.SystemRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemRoles");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.SystemRolePermission", b =>
                {
                    b.Property<int>("SystemRoleID")
                        .HasColumnType("int");

                    b.Property<string>("PermissionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SystemRoleID", "PermissionID");

                    b.HasIndex("PermissionID");

                    b.ToTable("SystemRolePermissions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.SessionDetails.ActionPlanComponent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProgressStatus")
                        .HasColumnType("int");

                    b.Property<string>("ScenarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedTo");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("SessionId");

                    b.ToTable("ActionPlanComponents");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.SessionDetails.GapAnalysisSession", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("GapAnalysisSessions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.SessionDetails.SessionComponent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("AnswerStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SessionId");

                    b.ToTable("SessionComponents");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.SubscriptionPlan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Pricing")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.UserDetails.ExploreUserAccess", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TrialEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TrialStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("ExploreUserAccess");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.UserDetails.FacilityUser", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FacilityRoleID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("FacilityID");

                    b.HasIndex("FacilityRoleID");

                    b.ToTable("FacilityUsers");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.UserDetails.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SystemRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SystemRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.UserDetails.UserActionLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Context")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("UserActionLogs");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.BillingDetails.Payment", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Facility", "Facility")
                        .WithMany("Payments")
                        .HasForeignKey("FacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.BillingDetails.Subscription", "Subscription")
                        .WithMany("Payments")
                        .HasForeignKey("SubscriptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.BillingDetails.Subscription", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Facility", "Facility")
                        .WithMany("Subscriptions")
                        .HasForeignKey("FacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.BillingDetails.SubscriptionPlanFeature", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.BillingDetails.Feature", "Feature")
                        .WithMany("SubscriptionPlanFeatures")
                        .HasForeignKey("FeatureID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("SubscriptionPlanFeatures")
                        .HasForeignKey("SubscriptionPlanID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.AnswerOption", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Question", "Question")
                        .WithMany("AnswerOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.ChapterAccreditationFacilityType", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Accreditation", "Accreditation")
                        .WithMany("ChapterAccreditationFacilityTypes")
                        .HasForeignKey("AccreditationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Chapter", "Chapter")
                        .WithMany("ChapterAccreditationFacilityTypes")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.FacilityType", "FacilityType")
                        .WithMany("ChapterAccreditationFacilityTypes")
                        .HasForeignKey("FacilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accreditation");

                    b.Navigation("Chapter");

                    b.Navigation("FacilityType");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.EoC", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Standard", "Standard")
                        .WithMany("EoCs")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Standard");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Facility", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Accreditation", "Accreditation")
                        .WithMany("Facilities")
                        .HasForeignKey("AccreditationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.FacilityType", "FacilityType")
                        .WithMany("Facilities")
                        .HasForeignKey("FacilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accreditation");

                    b.Navigation("FacilityType");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.ImprovementScenario", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.AnswerOption", "AnswerOption")
                        .WithOne("ImprovementScenario")
                        .HasForeignKey("AccrediGo.Domain.Entities.MainComponents.ImprovementScenario", "AnswerOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnswerOption");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Question", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Question", "DependsOnQuestion")
                        .WithMany()
                        .HasForeignKey("DependsOnQuestionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.EoC", "EoC")
                        .WithMany("Questions")
                        .HasForeignKey("EoCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DependsOnQuestion");

                    b.Navigation("EoC");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Standard", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.ChapterAccreditationFacilityType", "ChapterAccreditationFacilityType")
                        .WithMany("Standards")
                        .HasForeignKey("ChapterAccreditationFacilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChapterAccreditationFacilityType");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.FacilityRolePermission", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.Roles.FacilityRole", "FacilityRole")
                        .WithMany("FacilityRolePermissions")
                        .HasForeignKey("FacilityRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.Roles.Permission", "Permission")
                        .WithMany("FacilityRolePermissions")
                        .HasForeignKey("PermissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityRole");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.SystemRolePermission", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.Roles.Permission", "Permission")
                        .WithMany("SystemRolePermissions")
                        .HasForeignKey("PermissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.Roles.SystemRole", "SystemRole")
                        .WithMany("SystemRolePermissions")
                        .HasForeignKey("SystemRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("SystemRole");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.SessionDetails.ActionPlanComponent", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.UserDetails.FacilityUser", "FacilityUser")
                        .WithMany()
                        .HasForeignKey("AssignedTo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.ImprovementScenario", "ImprovementScenario")
                        .WithMany("ActionPlanComponents")
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.SessionDetails.GapAnalysisSession", "GapAnalysisSession")
                        .WithMany("ActionPlanComponents")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityUser");

                    b.Navigation("GapAnalysisSession");

                    b.Navigation("ImprovementScenario");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.SessionDetails.GapAnalysisSession", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Facility", "Facility")
                        .WithMany("GapAnalysisSessions")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.SessionDetails.SessionComponent", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Question", "Question")
                        .WithMany("SessionComponents")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.SessionDetails.GapAnalysisSession", "GapAnalysisSession")
                        .WithMany("SessionComponents")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GapAnalysisSession");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.UserDetails.ExploreUserAccess", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.UserDetails.User", "User")
                        .WithOne("ExploreUserAccess")
                        .HasForeignKey("AccrediGo.Domain.Entities.UserDetails.ExploreUserAccess", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.UserDetails.FacilityUser", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.MainComponents.Facility", "Facility")
                        .WithMany("FacilityUsers")
                        .HasForeignKey("FacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.Roles.FacilityRole", "FacilityRole")
                        .WithMany("FacilityUsers")
                        .HasForeignKey("FacilityRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrediGo.Domain.Entities.UserDetails.User", "User")
                        .WithOne("FacilityUser")
                        .HasForeignKey("AccrediGo.Domain.Entities.UserDetails.FacilityUser", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("FacilityRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.UserDetails.User", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.Roles.SystemRole", "SystemRole")
                        .WithMany("Users")
                        .HasForeignKey("SystemRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemRole");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.UserDetails.UserActionLog", b =>
                {
                    b.HasOne("AccrediGo.Domain.Entities.UserDetails.User", "User")
                        .WithMany("UserActionLogs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.BillingDetails.Feature", b =>
                {
                    b.Navigation("SubscriptionPlanFeatures");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.BillingDetails.Subscription", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Accreditation", b =>
                {
                    b.Navigation("ChapterAccreditationFacilityTypes");

                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.AnswerOption", b =>
                {
                    b.Navigation("ImprovementScenario")
                        .IsRequired();
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Chapter", b =>
                {
                    b.Navigation("ChapterAccreditationFacilityTypes");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.ChapterAccreditationFacilityType", b =>
                {
                    b.Navigation("Standards");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.EoC", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Facility", b =>
                {
                    b.Navigation("FacilityUsers");

                    b.Navigation("GapAnalysisSessions");

                    b.Navigation("Payments");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.FacilityType", b =>
                {
                    b.Navigation("ChapterAccreditationFacilityTypes");

                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.ImprovementScenario", b =>
                {
                    b.Navigation("ActionPlanComponents");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Question", b =>
                {
                    b.Navigation("AnswerOptions");

                    b.Navigation("SessionComponents");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.MainComponents.Standard", b =>
                {
                    b.Navigation("EoCs");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.FacilityRole", b =>
                {
                    b.Navigation("FacilityRolePermissions");

                    b.Navigation("FacilityUsers");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.Permission", b =>
                {
                    b.Navigation("FacilityRolePermissions");

                    b.Navigation("SystemRolePermissions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.Roles.SystemRole", b =>
                {
                    b.Navigation("SystemRolePermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.SessionDetails.GapAnalysisSession", b =>
                {
                    b.Navigation("ActionPlanComponents");

                    b.Navigation("SessionComponents");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.SubscriptionPlan", b =>
                {
                    b.Navigation("SubscriptionPlanFeatures");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("AccrediGo.Domain.Entities.UserDetails.User", b =>
                {
                    b.Navigation("ExploreUserAccess");

                    b.Navigation("FacilityUser");

                    b.Navigation("UserActionLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
